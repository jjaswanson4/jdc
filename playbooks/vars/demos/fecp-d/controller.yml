---

cpus: 4
memory_mb: 16384
os: rhel9
application: general

aap_download_url: http://satellite.lab.msp.redhat.com/pub/ansible-automation-platform-setup-latest.tar.gz
aap_installer_bundle: ansible-automation-platform-setup-latest.tar.gz

controller_install:
  admin_password: "{  { admin_password }}"
  pg:
    password: "{  { admin_password }}"

bootstrap_controller: yes

controller_hostname: "{  { inventory_hostname }}"
controller_username: "{  { admin_username }}"
controller_password: "{  { admin_password }}"
controller_validate_certs: no

controller_configuration_projects_async_retries: 60
controller_configuration_projects_async_delay: 5

controller_license:
  manifest: /tmp/controller-manifest.zip

controller_organizations:
  - name: "{  { audience }}"

controller_credential_types:
  - name: Automation Hub Image Registry Credentials
    kind: cloud
    injectors:
      extra_vars:
        hub_image_registry_username: "{  { admin_username }}"
        hub_image_registry_password: "{  { admin_password }}"
        hub_image_registry_tls_verify: 'no'

controller_credentials:
  - name: Automation Hub Image Registry Credentials
    organization: "{  { audience }}"
    credential_type: Container Registry
    inputs:
      host: hub.lab.msp.redhat.com
      username: "{  { admin_username }}"
      password: "{  { admin_password }}"
      verify_ssl: no
  - name: Edge User Credentials
    organization: "{  { audience }}"
    credential_type: Machine
    inputs:
      username: "{  { edge_user_username }}"
      ssh_key_data: "{  { edge_user_ssh_key_data }}"
  - name: Automation User
    organization: "{  { audience }}"
    credential_type: Machine
    inputs:
      username: ansible
      password: "{  { admin_password }}"
      become_password: "{  { admin_password }}"

controller_execution_environments:
  - name: Josh's Demos Collection EE
    image: 'hub.lab.msp.redhat.com/joshs-demos-collection-ee:latest'
    organization: "{  { audience }}"
    credential: Automation Hub Image Registry Credentials
    pull: always

controller_inventories:
  - name: "{  { audience }} Edge Systems"
    organization: "{  { audience }}"
    variables:
      audience: "{  { audience }}"
      demo_uuid: "{  { demo_uuid }}"
  - name: "{  { audience }} Edge Utilities"
    organization: "{  { audience }}"
    variables:
      audience: "{  { audience }}"
      demo_uuid: "{  { demo_uuid }}"
  - name: Local Actions
    organization: "{  { audience }}"
    variables:
      audience: "{  { audience }}"
      demo_uuid: "{  { demo_uuid }}"
      base_dns_suffix: "{  { base_dns_suffix }}"

controller_hosts:
  - name: "image-builder.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "{  { audience }} Edge Utilities"
    variables:
      os: rhel9
      cpus: 8
      memory_mb: 24576
      application: general
      lifecycle_environment: production
  - name: "edge-images.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "{  { audience }} Edge Utilities"
    variables:
      os: rhel9
      cpus: 8
      memory_mb: 24576
      application: general
      lifecycle_environment: production

  - name: localhost
    inventory: Local Actions
    variables:
      ansible_connection: local
      ansible_python_interpreter: '{  { ansible_playbook_python }}'

controller_group_tiers: 1
controller_groups_tier1:
  - name: image_builder
    inventory: "{  { audience }} Edge Utilities"
    hosts:
      - "image-builder.{{ demo_uuid }}.{{ base_dns_suffix }}"
  - name: edge_image_hosting
    inventory: "{  { audience }} Edge Utilities"
    hosts:
      - "edge-images.{{ demo_uuid }}.{{ base_dns_suffix }}"

controller_projects:
  - name: "{  { audience }} Edge Management Codebase"
    organization: "{  { audience }}"
    scm_branch: main
    scm_type: git
    scm_url: https://github.com/jjaswanson4/jdc.git

controller_templates:
  - name: Setup Image Builder
    inventory: "{  { audience }} Edge Utilities"
    limit: image_builder
    project: "{  { audience }} Edge Management Codebase"
    organization: "{  { audience }}"
    playbook: playbooks/setup-image-builder.yml
    execution_environment: Josh's Demos Collection EE
    allow_simultaneous: yes
    become_enabled: yes
    credentials:
      - Automation User
  - name: Create Initial Edge Image
    inventory: "{  { audience }} Edge Utilities"
    limit: image_builder
    project: "{  { audience }} Edge Management Codebase"
    organization: "{  { audience }}"
    playbook: playbooks/build-image.yml
    execution_environment: Josh's Demos Collection EE
    allow_simultaneous: yes
    become_enabled: yes
    credentials:
      - Automation User
    extra vars:
      blueprint:
        name: rhel-edge-image
        version: 1.0.0
        packages:
          - vim-enhanced
          - ansible-core
          - git
          - open-vm-tools
        customizations:
          user:
            name: edge-user
            password: "{  { admin_password }}"
            groups: '["users", "wheel"]'


# controller_workflows:
#   - name: Deploy Edge Systems
#     organization: "{  { audience }}"
#     state: present
#     extra_vars:
#       audience: "{  { audience }}"
#       demo: "{  { demo }}"
#       demo_uuid: "{  { demo_uuid }}"
#       base_dns_suffix: "{  { base_dns_suffix }}"
#     survey_enabled: yes
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - type: multiplechoice
#           question_name: Workload Type?
#           question_description: What workload should be run?
#           variable: edge_workload
#           choices:
#             - Process Control
#             - In-Store Display
#           required: yes
#           default: Process Control
#         - type: text
#           question_name: In-Store Display Website?
#           question_description: If building in-store displays, what website should they display?
#           variable: display_website
#           required: no
#           default: "https://{  { audience | lower }}.com"
#     simplified_workflow_nodes:
#       - identifier: Build Edge Workload
#         unified_job_template: Build Edge Workload
#         success_nodes:
#           - Create Process Control System Installer ISO
#       - identifier: Create Process Control System Installer ISO
#         unified_job_template: Create Edge Installer ISO
#         extra_data:
#           source_installer_image: rhel-edge-pcs-image.iso
#         success_nodes:
#           - Create Human Machine Interface Installer ISO
#       - identifier: Create Human Machine Interface Installer ISO
#         unified_job_template: Create Edge Installer ISO
#         extra_data:
#           source_installer_image: rhel-edge-hmi-image.iso
#         success_nodes:
#           - Create Edge Devices Inventory
#       - identifier: Create Edge Devices Inventory
#         unified_job_template: Create Edge Devices Inventory
#         success_nodes:
#           - Provision Edge Systems
#       - identifier: Provision Edge Systems
#         unified_job_template: Provision Edge Systems
#         all_parents_must_converge: yes
   
#   - name: Post-Install Edge System
#     organization: "{  { audience }}"
#     state: present
#     ask_limit_on_launch: yes
#     allow_simultaneous: yes
#     simplified_workflow_nodes:
#       - identifier: Apply Configuration to Edge Device
#         unified_job_template: Apply Configuration to Edge Device
#         success_nodes:
#           - Add Edge Device to Controller Group
#       - identifier: Add Edge Device to Controller Group
#         unified_job_template: Add Edge Device to Controller Group
#         success_nodes:
#           - Deploy Edge Workload
#           - Add Device to Edge Management Group
#       - identifier: Add Device to Edge Management Group
#         unified_job_template: Add Device to Edge Management Group
#       - identifier: Deploy Edge Workload
#         unified_job_template: Deploy Edge Workload

#   - name: Teardown Edge Systems
#     organization: "{  { audience }}"
#     state: present
#     simplified_workflow_nodes:
#       - identifier: Disconnect From Consoledot
#         unified_job_template: Disconnect from Consoledot
#         success_nodes:
#           - Delete Edge Installer ISO
#           - Delete Edge Systems
#       - identifier: Delete Edge Installer ISO
#         unified_job_template: Delete Edge Installer ISO
#         success_nodes:
#           - Delete Hosts from Controller Inventory
#       - identifier: Delete Edge Systems
#         unified_job_template: Delete Edge Systems
#         success_nodes:
#           - Delete Hosts from Controller Inventory
#       - identifier: Delete Hosts from Controller Inventory
#         unified_job_template: Delete Hosts from Controller Inventory
#         all_parents_must_converge: yes

