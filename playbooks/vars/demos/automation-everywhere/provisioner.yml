---

# By default, the org 'Demo Provisioner' is created and resources are configured there,
# Use this variable to override this behavior.
# For example, overriding to 'Default' will put the resources into the default controller organization.
controller_organization: Demo Provisioner

# This is the default project name. It is a var so demos can import specific job templates and override the project locally.
# Change this to change the name of the project for the provisioner job templates.
project: Josh's Demos Collection

# This is the default prefix for assets created for this demo.
# Change this variable to use a different prefix.
demo_prefix: Automation Everywhere Demo

# This is the realitive path to the vars files for this demo.
# Typically this contains a vars file for the provisioner, Satellite, and Controller.
vars_files_path: "vars/demos/{{ demo }}"

# This is the realitive path for files for this demo.
# Typically this contains something copied out or uploaded.
files_files_path: "files/demos/{{ demo }}"

# This is the information used for the instance of Controller for the demo.
# This can be the same instance as where the provisioner is deployed, but it's not recommended.
controller_configuration_file: "{{ vars_files_path }}/controller.yml"

# This is the information used for the instance of Satellite for the demo.
# This can be the same instance as where the provisioner is deployed, but it's not recommended.
satellite_configuration_file: "{{ vars_files_path }}/satellite.yml"

# This is the information used for the instance of Hub for the demo.
# This can be the same instance as where the provisioner is deployed, but it's not recommended.
hub_configuration_file: "{{ vars_files_path }}/hub.yml"

base_dns_suffix: demos.lcl

# This toggles secure logging, for example: when configuring credentials on Ansible Controller.
# Since I'm using my own instance, secure logging isn't a requirement.
controller_configuration_credentials_secure_logging: no

controller_organizations: []
controller_execution_environments: []
controller_inventories: []
controller_projects: []

controller_configuration_projects_async_retries: 60
controller_configuration_projects_async_delay: 5

controller_credential_types:
  - name: Demo Provisioner Automation Hub Credentials
    kind: cloud
    inputs:
      fields:
        - id: ah_username
          type: string
          label: Automation Hub Username
        - id: ah_password
          type: string
          label: Automation Hub Password
          secret: yes
    injectors:
      extra_vars:
        ah_username: "{  { ah_username }}"
        ah_password: "{  { ah_password }}"
        ah_validate_certs: 'no'

controller_credentials:
  - name: Demo Provisioner Automation Hub Credentials
    credential_type: Demo Provisioner Automation Hub Credentials
    organization: Demo Provisioner
    inputs:
      ah_username: "{{ admin_username }}"
      ah_password: "{{ admin_password }}"

controller_hosts:
  - name: "{{ audience | lower }}-gitlab.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "Demo {{ demo_uuid }} Inventory"
    variables:
      gitlab_groups:
        - name: Network Automation
          path: network_automation
          visibility: public
        - name: CMDB Automation
          path: cmdb_automation
          visibility: public
        - name: Virtualization Automation
          path: virtualization_automation
          visibility: public
      gitlab_projects:
        - name: IP Address Management
          path: ip_address_management
          group: network_automation
          visibility: public
        - name: Manage Records
          path: manage_records
          group: cmdb_automation
          visibility: public
        - name: Manage DNS Records
          path: manage_dns_records
          group: network_automation
          visibility: public
        - name: Manage Systems
          path: manage_systems
          group: virtualization_automation
          visibility: public
  - name: "automation-utils.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "Demo {{ demo_uuid }} Inventory"

controller_group_tiers: 3

controller_groups_tier1:
  - name: gitlab
    inventory: "Demo {{ demo_uuid }} Inventory"
    hosts:
      - "{{ audience | lower }}-gitlab.{{ demo_uuid }}.{{ base_dns_suffix }}"
    variables:
      gitlab_edition: enterprise
      cpus: 4
      memory_mb: 16384
      firewall:
        name: firewalld
        state: stopped
        enabled: no

controller_groups_tier2: 
  - name: source_control
    inventory: "Demo {{ demo_uuid }} Inventory"
    hosts:
      - "automation-utils.{{ demo_uuid }}.{{ base_dns_suffix }}"
    children:
      - gitlab
    variables:
      gitlab_api_url: "https://{{ audience | lower }}-gitlab.{{ demo_uuid }}.{{ base_dns_suffix }}/"
      gitlab_api_username: root
      gitlab_api_password: "{  { admin_password }}"
      gitlab_api_validate_certs: no
      demo_ansible_collections:
        - fqcn: network_automation.ip_address_management
          version: 1.0.0
          display_name: IP Address Management
          description: A collection of automation for IP address management
          tags:
            - network
            - ip_address
            - ipv4
          git:
            name: Network Automation
            email: network-automation@company.com
          templates:
            - src: templates/demos/automation-everywhere/galaxy.yml.j2
              dest: "{  { demo_ansible_collections_working_directory }}/network_automation/ip_address_management/galaxy.yml"
        - fqcn: cmdb_automation.manage_records
          version: 1.0.0
          display_name: Manage Records
          description: A collection for managing CDMB records via automation
          tags:
            - netbox
            - cmdb
            - instance_records
          git:
            name: CMDB Automation
            email: cmdb-automation@company.com
        - fqcn: network_automation.manage_dns_records
          version: 1.0.0
          display_name: Manage DNS Records
          description: A collection for managing DNS records via automation
          tags:
            - dns
            - idm
            - freeipa
          git:
            name: Network Automation
            email: network-automation@company.com
        - fqcn: virtualization_automation.manage_systems
          version: 1.0.0
          display_name: Manage Systems
          description: A collection for managing DNS records via automation
          tags:
            - virtualization
            - vmware
            - cloud
            - systems_management
          git:
            name: Virtualization Automation
            email: network-automation@company.com

controller_groups_tier3:
  - name: demo_hosts
    inventory: "Demo {{ demo_uuid }} Inventory"
    hosts:
      - "automation-utils.{{ demo_uuid }}.{{ base_dns_suffix }}"
    children:
      - source_control
    variables:
      cpus: 2
      memory_mb: 4096
      os: rhel8
      application: general
      lifecycle_environment: production
      provisioning:
        host_group: "{  { os }}/vlan146"
        organization: "{  { audience }}"
        location: "{  { audience }}"
        method: bootdisk
        dns_domain: "{  { demo_uuid }}.{  { base_dns_suffix }}"
        cpus: "{  { cpus }}"
        memory_mb: "{  { memory_mb }}"
        activation_keys: "ak-{  { application }}-{  { os }}-{  { lifecycle_environment }}"

controller_templates:
  - name: Install GitLab
    inventory: Demo Inventory
    ask_inventory_on_launch: yes
    ask_limit_on_launch: yes
    project: "{{ project }}"
    playbook: playbooks/install-gitlab.yml
    execution_environment: Josh's Demos Collection EE
    ask_credential_on_launch: yes
  - name: Configure GitLab
    inventory: Demo Inventory
    ask_inventory_on_launch: yes
    ask_limit_on_launch: yes
    project: "{{ project }}"
    playbook: playbooks/configure-gitlab.yml
    execution_environment: Josh's Demos Collection EE
    ask_credential_on_launch: yes
  - name: Build Ansible Collections
    inventory: Demo Inventory
    ask_inventory_on_launch: yes
    ask_limit_on_launch: yes
    project: "{{ project }}"
    playbook: playbooks/build-ansible-collection.yml
    execution_environment: Josh's Demos Collection EE
    ask_credential_on_launch: yes
  - name: Source Control Ansible Collections
    inventory: Demo Inventory
    ask_inventory_on_launch: yes
    ask_limit_on_launch: yes
    project: "{{ project }}"
    playbook: playbooks/source-control-ansible-collection.yml
    execution_environment: Josh's Demos Collection EE
    ask_credential_on_launch: yes

controller_workflows:
  - name: Provision Automation Everywhere Demo
    organization: "{{ controller_organization }}"
    state: "{{ controller_state | default('present') }}"
    ask_inventory_on_launch: yes
    ask_variables_on_launch: yes
    extra_vars:
      demo: automation-everywhere
    simplified_workflow_nodes:
      - identifier: Create CMDB Records
        unified_job_template: Manage CMDB Records
        limit: "management_plane:demo_hosts"
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner vCenter Credentials
        success_nodes:
          - Create DNS Records
        failure_nodes:
          - Send Failure Email About 'Create CMDB Records'
      - identifier: Send Failure Email About 'Create CMDB Records'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Create CMDB Records
      - identifier: Create DNS Records
        unified_job_template: Manage DNS Records
        limit: "management_plane:demo_hosts"
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner IDM Credentials
        success_nodes:
          - Provision GitLab
          - Provision Automation Utils System
          - Provision Automation Hub
          - Provision Controller
        failure_nodes:
          - Send Failure Email About 'Create DNS Records'
      - identifier: Send Failure Email About 'Create DNS Records'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Create DNS Records
      # GitLab Steps
      - identifier: Provision GitLab
        unified_job_template: Provision Systems
        limit: gitlab
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
        success_nodes:
          - Apply Standard Config to GitLab
        failure_nodes:
          - Send Failure Email About 'Provision GitLab'
      - identifier: Send Failure Email About 'Provision GitLab'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Provision GitLab
      - identifier: Apply Standard Config to GitLab
        unified_job_template: Apply Standard Configuration
        limit: gitlab
        credentials:
          - Demo Provisioner Root Account
        success_nodes:
          - Install GitLab
        failure_nodes:
          - Send Failure Email About 'Apply Standard Config to GitLab'
      - identifier: Send Failure Email About 'Apply Standard Config to GitLab'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Apply Standard Config to GitLab
      - identifier: Install GitLab
        unified_job_template: Install GitLab
        limit: gitlab
        credentials:
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
        success_nodes:
          - Configure GitLab
        failure_nodes:
          - Send Failure Email About 'Install GitLab'
      - identifier: Send Failure Email About 'Install GitLab'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Install GitLab
      - identifier: Configure GitLab
        unified_job_template: Configure GitLab
        limit: gitlab
        credentials:
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
        success_nodes:
          - Build Ansible Collections
        failure_nodes:
          - Send Failure Email About 'Configure GitLab'
      - identifier: Send Failure Email About 'Configure GitLab'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Configure GitLab
      # Automation Utils steps
      - identifier: Provision Automation Utils System
        unified_job_template: Provision Systems
        limit: 'source_control:!gitlab'
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
        success_nodes:
          - Apply Standard Config to Automation Utils System
        failure_nodes:
          - Send Failure Email About 'Provision Automation Utils System'
      - identifier: Send Failure Email About 'Provision Automation Utils System'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Provision Automation Utils System
      - identifier: Apply Standard Config to Automation Utils System
        unified_job_template: Apply Standard Configuration
        limit: 'source_control:!gitlab'
        credentials:
          - Demo Provisioner Root Account
        success_nodes:
          - Build Ansible Collections
        failure_nodes:
          - Send Failure Email About 'Apply Standard Config to Automation Utils System'
      - identifier: Send Failure Email About 'Apply Standard Config to Automation Utils System'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Apply Standard Config to Automation Utils Systems
      # Collections work
      - identifier: Build Ansible Collections
        unified_job_template: Build Ansible Collections
        limit: 'source_control:!gitlab'
        credentials:
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
        success_nodes:
          - Configure Automation Hub
        failure_nodes:
          - Send Failure Email About 'Build Ansible Collections'
        all_parents_must_converge: yes
      - identifier: Send Failure Email About 'Build Ansible Collections'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Build Ansible Collections
      # Hub work    
      - identifier: Provision Automation Hub
        unified_job_template: Provision Systems
        limit: hub
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
        success_nodes:
          - Apply Standard Config to Automation Hub
        failure_nodes:
          - Send Failure Email About 'Provision Automation Hub'
      - identifier: Send Failure Email About 'Provision Automation Hub'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Provision Automation Hub
      - identifier: Apply Standard Config to Automation Hub
        unified_job_template: Apply Standard Configuration
        limit: hub
        credentials:
          - Demo Provisioner Root Account
        success_nodes:
          - Install Automation Hub
        failure_nodes:
          - Send Failure Email About 'Apply Standard Config to Automation Hub'
      - identifier: Send Failure Email About 'Apply Standard Config to Automation Hub'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Apply Standard Config to Automation Hub
      - identifier: Install Automation Hub
        unified_job_template: Install Ansible Automation Platform
        limit: hub
        credentials:
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Red Hat Registry Credentials
        success_nodes:
          - Configure Automation Hub
        failure_nodes:
          - Send Failure Email About 'Install Automation Hub'
      - identifier: Send Failure Email About 'Install Automation Hub'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Install Automation Hub
      - identifier: Configure Automation Hub
        unified_job_template: Configure Automation Hub
        limit: hub
        credentials:
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Automation Hub Credentials
        success_nodes:
          - Configure Ansible Controller
        failure_nodes:
          - Send Failure Email About 'Configure Automation Hub'
        all_parents_must_converge: yes
      - identifier: Send Failure Email About 'Configure Automation Hub'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Configure Automation Hub
      - identifier: Provision Controller
        unified_job_template: Provision Systems
        limit: controller
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
        success_nodes:
          - Apply Standard Config to Controller
        failure_nodes:
          - Send Failure Email About 'Provision Controller'
      - identifier: Send Failure Email About 'Provision Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Provision Controller
      - identifier: Apply Standard Config to Controller
        unified_job_template: Apply Standard Configuration
        limit: controller
        credentials:
          - Demo Provisioner Root Account
        success_nodes:
          - Install Ansible Controller
        failure_nodes:
          - Send Failure Email About 'Apply Standard Config to Controller'
      - identifier: Send Failure Email About 'Apply Standard Config to Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Apply Standard Config to Controller
      - identifier: Install Ansible Controller
        unified_job_template: Install Ansible Controller
        limit: controller
        credentials:
          - Demo Provisioner Red Hat Registry Credentials
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
        success_nodes:
          - Configure Ansible Controller
        failure_nodes:
          - Send Failure Email About 'Install Ansible Controller'
      - identifier: Send Failure Email About 'Install Ansible Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Install Ansible Controller
      - identifier: Configure Ansible Controller
        unified_job_template: Configure Ansible Controller
        limit: controller
        credentials:
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner IDM Credentials
          - Demo Provisioner Satellite Credentials
        success_nodes:
          - Send Success Email
        failure_nodes:
          - Send Failure Email About 'Configure Ansible Controller'
        all_parents_must_converge: yes
      - identifier: Send Failure Email About 'Configure Ansible Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Configure Ansible Controller
      - identifier: Send Success Email
        unified_job_template: Send Provisioner Email
        all_parents_must_converge: yes
        extra_data:
          provisioner_status: success

  - name: Teardown Automation Everywhere Demo
    organization: "{{ controller_organization }}"
    ask_inventory_on_launch: yes
    ask_variables_on_launch: yes
    state: "{{ controller_state | default('present') }}"
    extra_vars:
      demo: s4hana-deployment
    simplified_workflow_nodes:
      - identifier: Unregister from Insights
        unified_job_template: Unregister from Insights
        limit: 'demo_hosts:ansible_automation_platform'
        credentials:
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
        always_nodes:
          - Teardown Hosts
      - identifier: Teardown Hosts
        unified_job_template: Teardown Systems
        limit: 'demo_hosts:ansible_automation_platform'
        credentials:
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner Admin Credentials
        always_nodes:
          - Cleanup DNS Records
      - identifier: Cleanup DNS Records
        unified_job_template: Manage DNS Records
        limit: 'demo_hosts:management_plane'
        credentials:
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner IDM Credentials
        extra_data:
          dns_records_state: absent
        always_nodes:
          - Remove CMDB Records
      - identifier: Remove CMDB Records
        unified_job_template: Manage CMDB Records
        limit: 'demo_hosts:management_plane'
        credentials:
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner vCenter Credentials
        extra_data:
          cmdb_record_state: absent
        always_nodes:
          - Remove Demo Context
      - identifier: Remove Demo Context
        unified_job_template: Configure Demo Context
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner IDM Credentials
          - Demo Provisioner Satellite Credentials
        extra_data:
          demo_context_state: absent