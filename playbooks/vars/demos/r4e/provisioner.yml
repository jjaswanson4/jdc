---

# By default, the org 'Demo Provisioner' is created and resources are configured there,
# Use this variable to override this behavior.
# For example, overriding to 'Default' will put the resources into the default controller organization.
controller_organization: Demo Provisioner

# This is the default project name. It is a var so demos can import specific job templates and override the project locally.
# Change this to change the name of the project for the provisioner job templates.
project: Josh's Demos Collection

# This is the default prefix for assets created for this demo.
# Change this variable to use a different prefix.
demo_prefix: Patching Demo

# This is the realitive path to the vars files for this demo.
# Typically this contains a vars file for the provisioner, Satellite, and Controller.
vars_files_path: "vars/demos/{{ demo }}"

# This is the execution environment used for this demo provisioner.
# This execution environment will automatically be configured in Controller.
execution_environment:
  name: Josh's Demos Collection EE
  registry: "{{ ee_registry.host }}"
  image: joshs-demos-collection-ee
  credential: Demo Provisioner EE Image Registry Credentials

# This is the information used for the instance of Controller for the demo.
# This can be the same instance as where the provisioner is deployed, but it's not recommended.
controller_configuration_file: "{{ vars_files_path }}/controller.yml"

# This is the information used for the instance of Satellite for the demo.
# This can be the same instance as where the provisioner is deployed, but it's not recommended.
satellite_configuration_file: "{{ vars_files_path }}/satellite.yml"

# This is the information used for the instance of Hub for the demo.
# This can be the same instance as where the provisioner is deployed, but it's not recommended.
hub_configuration_file: "{{ vars_files_path }}/hub.yml"

base_dns_suffix: demos.lcl

# This toggles secure logging, for example: when configuring credentials on Ansible Controller.
# Since I'm using my own instance, secure logging isn't a requirement.
controller_configuration_credentials_secure_logging: no

# These are where demo specific components are defined, in hash form. These will automatically be added to the common resources.
# If there is no need for a specific, resource, simply define an empty var, such as `controller_organizations: []`
controller_organizations: []
controller_execution_environments: []
controller_inventories: []
controller_projects: []

controller_configuration_projects_async_retries: 60
controller_configuration_projects_async_delay: 5

controller_credential_types:
  - name: Demo Provisioner RHC Edge Credentials
    kind: cloud
    inputs:
      fields:
        - id: rhc_org_id
          type: string
          label: Organization ID
        - id: rhc_activation_key
          type: string
          label: Activation Key
    injectors:
      extra_vars:
        rhc_org_id: "{  { rhc_org_id }}"
        rhc_activation_key: "{  { rhc_activation_key }}"
  - name: Demo Provisioner Edge User SSH Key Data
    kind: cloud
    inputs:
      fields:
        - id: edge_user_username
          type: string
          label: Username
        - id: edge_user_ssh_key_data
          type: string
          label: Private SSH Key Data
          secret: yes
    injectors:
      extra_vars:
        edge_user_username: "{  { edge_user_username }}"
        edge_user_ssh_key_data: "{  { edge_user_ssh_key_data }}"


controller_credentials:
  - name: Demo Provisioner RHC Edge Credentials
    credential_type: Demo Provisioner RHC Edge Credentials
    organization: "{{ controller_organization }}"
    inputs:
      rhc_org_id: "{{ rhc.org_id }}"
      rhc_activation_key: "{{ rhc.activation_key }}"
  - name: Demo Provisioner RHC Edge Credentials
    credential_type: Demo Provisioner RHC Edge Credentials
    organization: "{{ controller_organization }}"
    inputs:
      rhc_org_id: "{{ rhc.org_id }}"
      rhc_activation_key: "{{ rhc.activation_key }}"
  - name: Demo Provisioner Edge User Credentials
    credential_type: Demo Provisioner Edge User SSH Key Data
    organization: "{{ controller_organization }}"
    inputs:
      edge_user_username: edge-user
      edge_user_ssh_key_data: "{{ edge_user_key_data }}"

controller_hosts:
  - name: "edge-utilities.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "Demo {{ demo_uuid }} Inventory"
    variables:
      os: rhel8
      cpus: 4
      memory_mb: 8192
      application: general
      lifecycle_environment: production
  - name: "process-control-system-1.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "Demo {{ demo_uuid }} Inventory"
  - name: "human-machine-interface-1.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "Demo {{ demo_uuid }} Inventory"
  - name: "in-store-display-1.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "Demo {{ demo_uuid }} Inventory"
  - name: "in-store-display-1.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "Demo {{ demo_uuid }} Inventory"
  - name: "in-store-display-1.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "Demo {{ demo_uuid }} Inventory"
  - name: localhost
    inventory: "Demo {{ demo_uuid }} Inventory"
    variables:
      ansible_connection: local
      ansible_python_interpreter: '{  { ansible_playbook_python }}'
  - name: console.redhat.com
    inventory: "Demo {{ demo_uuid }} Inventory"
    variables:
      ansible_connection: ansible.netcommon.httpapi
      ansible_network_os: consoledot.edgemanagement.consoledot
      ansible_user: "{  { console_dot_username }}"
      ansible_httpapi_pass: "{  { console_dot_password }}"
      ansible_httpapi_use_ssl: yes

controller_group_tiers: 2
controller_groups_tier1:
  - name: utility_server
    inventory: "Demo {{ demo_uuid }} Inventory"
    hosts:
      - "edge-utilities.{{ demo_uuid }}.{{ base_dns_suffix }}"
  - name: edge_systems
    inventory: "Demo {{ demo_uuid }} Inventory"
    hosts:
      - "process-control-system-1.{{ demo_uuid }}.{{ base_dns_suffix }}"
      - "human-machine-interface-1.{{ demo_uuid }}.{{ base_dns_suffix }}"
      - "in-store-display-1.{{ demo_uuid }}.{{ base_dns_suffix }}"
      - "in-store-display-1.{{ demo_uuid }}.{{ base_dns_suffix }}"
      - "in-store-display-1.{{ demo_uuid }}.{{ base_dns_suffix }}"

controller_groups_tier2:
  - name: demo_hosts
    inventory: "Demo {{ demo_uuid }} Inventory"
    children:
      - edge_systems
      - utility_server
    variables:
      provisioning:
        host_group: "{  { os }}/vlan146"
        method: bootdisk
        dns_domain: "{  { demo_uuid }}.{  { base_dns_suffix }}"
        cpus: "{  { cpus }}"
        memory_mb: "{  { memory_mb }}"
        activation_keys: "ak-{  { application }}-{  { os }}-{  { lifecycle_environment }}"

controller_templates:
- name: Teardown Edge Systems
  organization: "{{ controller_organization }}"
  ask_inventory_on_launch: yes
  inventory: Demo Inventory
  project: "{{ project }}"
  allow_simultaneous: yes
  playbook: playbooks/teardown-virtual-machine.yml
  execution_environment: "{{ execution_environment.name }}"
  ask_credential_on_launch: yes
  ask_variables_on_launch: yes
  ask_limit_on_launch: yes
- name: Manage Groups In Edge Management
  organization: "{{ controller_organization }}"
  ask_inventory_on_launch: yes
  inventory: Demo Inventory
  project: "{{ project }}"
  allow_simultaneous: yes
  playbook: playbooks/manage-groups-in-edge-management.yml
  execution_environment: "{{ execution_environment.name }}"
  ask_credential_on_launch: yes
  ask_variables_on_launch: yes
  ask_limit_on_launch: yes

controller_workflows:
  - name: Provision RHEL for Edge Demo
    organization: "{{ controller_organization }}"
    state: "{{ controller_state | default('present') }}"
    ask_inventory_on_launch: yes
    ask_variables_on_launch: yes
    extra_vars:
      demo: r4e
    simplified_workflow_nodes:
      - identifier: Create Demo Group In Edge Management
        unified_job_template: Manage Groups In Edge Management
        limit: console.redhat.com
        credentials:
          - Demo Provisioner Console Dot Credentials
        success_nodes:
          - Send Success Email
        failure_nodes:
          - Send Failure Email About 'Create Demo Group In Edge Management'
      - identifier: Send Failure Email About 'Create Demo Group In Edge Management'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Create Demo Group In Edge Management      
      - identifier: Create CMDB Records
        unified_job_template: Manage CMDB Records
        limit: 'utility_server:controller:hub'
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner vCenter Credentials
        success_nodes:
          - Create DNS Records
        failure_nodes:
          - Send Failure Email About 'Create CMDB Records'
      - identifier: Send Failure Email About 'Create CMDB Records'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Create CMDB Records
      - identifier: Create DNS Records
        unified_job_template: Manage DNS Records
        limit: 'utility_server:controller:hub'
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner IDM Credentials
        success_nodes:
          - Provision Controller
          - Provision Utility Server
          - Provision Hub
        failure_nodes:
          - Send Failure Email About 'Create DNS Records'
      - identifier: Send Failure Email About 'Create DNS Records'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Create DNS Records
      - identifier: Provision Controller
        unified_job_template: Provision Systems
        limit: controller
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
        success_nodes:
          - Apply Standard Config to Controller
        failure_nodes:
          - Send Failure Email About 'Provision Controller'
      - identifier: Send Failure Email About 'Provision Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Provision Controller
      - identifier: Apply Standard Config to Controller
        unified_job_template: Apply Standard Configuration
        limit: controller
        credentials:
          - Demo Provisioner Root Account
        success_nodes:
          - Install Ansible Controller
        failure_nodes:
          - Send Failure Email About 'Apply Standard Config to Controller'
      - identifier: Send Failure Email About 'Apply Standard Config to Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Apply Standard Config to Controller     
      - identifier: Install Ansible Controller
        unified_job_template: Install Ansible Controller
        limit: controller
        credentials:
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Red Hat Registry Credentials
        success_nodes:
          - Configure Ansible Controller
        failure_nodes:
          - Send Failure Email About 'Install Ansible Controller'
      - identifier: Send Failure Email About 'Install Ansible Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Install Ansible Controller
      - identifier: Configure Ansible Controller
        unified_job_template: Configure Ansible Controller
        limit: controller
        credentials:
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Red Hat Registry Credentials
          - Demo Provisioner RHC Edge Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Edge User Credentials
          - Demo Provisioner Console Dot Offline Token
        success_nodes:
          - Send Success Email
        failure_nodes:
          - Send Failure Email About 'Configure Ansible Controller'
        all_parents_must_converge: yes
      - identifier: Send Failure Email About 'Configure Ansible Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Configure Ansible Controller
      - identifier: Provision Utility Server
        unified_job_template: Provision Systems
        limit: utility_server
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
          - Demo Provisioner Console Dot Credentials
        success_nodes:
          - Apply Standard Config to Utility Server
        failure_nodes:
          - Send Failure Email About 'Provision Utility Server'
      - identifier: Send Failure Email About 'Provision Utility Server'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Provision Utility Server
      - identifier: Apply Standard Config to Utility Server
        unified_job_template: Apply Standard Configuration
        limit: utility_server
        credentials:
          - Demo Provisioner Root Account
        success_nodes:
          - Send Success Email
        failure_nodes:
          - Send Failure Email About 'Apply Standard Config to Utility Server'
      - identifier: Send Failure Email About 'Apply Standard Config to Utility Server'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Apply Standard Config to Utility Server
      - identifier: Provision Hub
        unified_job_template: Provision Systems
        limit: hub
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
        success_nodes:
          - Apply Standard Config to Hub
        failure_nodes:
          - Send Failure Email About 'Provision Hub'
      - identifier: Send Failure Email About 'Provision Hub'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Provision Hub
      - identifier: Apply Standard Config to Hub
        unified_job_template: Apply Standard Configuration
        limit: hub
        credentials:
          - Demo Provisioner Root Account
        success_nodes:
          - Install Hub
        failure_nodes:
          - Send Failure Email About 'Apply Standard Config to Hub'
      - identifier: Send Failure Email About 'Apply Standard Config to Hub'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Apply Standard Config to Hub    
      - identifier: Install Hub
        unified_job_template: Install Ansible Automation Platform
        limit: hub
        credentials:
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Red Hat Registry Credentials
        success_nodes:
          - Send Success Email
        failure_nodes:
          - Send Failure Email About 'Install Hub'
      - identifier: Send Failure Email About 'Install Hub'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Install Hub
      - identifier: Send Success Email
        unified_job_template: Send Provisioner Email
        all_parents_must_converge: yes
        extra_data:
          provisioner_status: success
  - name: Teardown RHEL for Edge Demo
    organization: "{{ controller_organization }}"
    state: "{{ controller_state | default('present') }}"
    ask_inventory_on_launch: yes
    ask_variables_on_launch: yes
    extra_vars:
      demo: r4e
    simplified_workflow_nodes:
      - identifier: Teardown Edge Systems
        unified_job_template: Teardown Edge Systems
        limit: edge_systems
        credentials:
          - Demo Provisioner Admin Credentials
          - Demo Provisioner vCenter Credentials
        always_nodes:
          - Remove Demo Context     
      - identifier: Unregister from Insights
        unified_job_template: Unregister from Insights
        limit: controller
        credentials:
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
        always_nodes:
          - Teardown Management and Utility Systems
      - identifier: Teardown Management and Utility Systems
        unified_job_template: Teardown Systems
        limit: 'utility_server:controller:hub'
        credentials:
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner Admin Credentials
        always_nodes:
          - Cleanup DNS Records
      - identifier: Cleanup DNS Records
        unified_job_template: Manage DNS Records
        limit: 'utility_server:controller:hub'
        credentials:
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner IDM Credentials
        extra_data:
          dns_records_state: absent
        always_nodes:
          - Remove CMDB Records
      - identifier: Remove CMDB Records
        unified_job_template: Manage CMDB Records
        limit: 'utility_server:controller:hub'
        credentials:
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner vCenter Credentials
        extra_data:
          cmdb_record_state: absent
        always_nodes:
          - Remove Demo Context
      - identifier: Remove Demo Group In Edge Management
        unified_job_template: Manage Groups In Edge Management
        limit: console.redhat.com
        credentials:
          - Demo Provisioner Console Dot Credentials
        extra_data:
          group_state: absent
        always_nodes:
          - Remove Demo Context
      - identifier: Remove Demo Context
        unified_job_template: Configure Demo Context
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner IDM Credentials
          - Demo Provisioner Satellite Credentials
        all_parents_must_converge: yes
        extra_data:
          demo_context_state: absent