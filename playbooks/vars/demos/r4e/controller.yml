---

cpus: 4
memory_mb: 16384
os: rhel8
application: general

aap_download_url: http://satellite.lab.msp.redhat.com/pub/ansible-automation-platform-setup-latest.tar.gz
aap_installer_bundle: ansible-automation-platform-setup-latest.tar.gz

controller_install:
  admin_password: "{  { admin_password }}"
  pg:
    password: "{  { admin_password }}"

bootstrap_controller: yes

controller_hostname: "{  { inventory_hostname }}"
controller_username: "{  { admin_username }}"
controller_password: "{  { admin_password }}"
controller_validate_certs: no

controller_configuration_projects_async_retries: 60
controller_configuration_projects_async_delay: 5

controller_license:
  manifest: /tmp/controller-manifest.zip

controller_organizations:
  - name: "{  { audience }}"

controller_credential_types:
  - name: Red Hat Registry Credentials
    kind: cloud
    injectors:
      extra_vars:
        redhat_registry_username: "{  { redhat_registry_username }}"
        redhat_registry_password: "{  { redhat_registry_password }}"
  - name: RHC Edge Credentials
    kind: cloud
    injectors:
      extra_vars:
        rhc_org_id: "{  { rhc_org_id }}"
        rhc_activation_key: "{  { rhc_activation_key }}" 
  - name: Controller API Credentials
    kind: cloud
    injectors:
      extra_vars:
        controller_hostname: "{  { audience | lower }}-{  { demo }}-controller.{  { demo_uuid }}.{  { base_dns_suffix }}"
        controller_username: "{  { controller_username }}"
        controller_password: "{  { controller_password }}"
        controller_validate_certs: 'no'
  - name: vCenter Credentials
    kind: cloud
    injectors:
      extra_vars:
        vcenter_hostname: "{  { vcenter_hostname }}"
        vcenter_username: "{  { vcenter_username }}"
        vcenter_password: "{  { vcenter_password }}"
        vcenter_validate_certs: "no"
        vcenter_datacenter: "{  { vcenter_datacenter }}"
        vcenter_cluster: "{  { vcenter_cluster }}"
        vcenter_datastore: storage04-nfs-lun0
  - name: Console Dot Offline Token
    kind: cloud
    injectors:
      extra_vars:
        console_dot_offline_token: "{  { console_dot_offline_token }}"

controller_credentials:
  - name: Automation Hub Image Registry Credentials
    organization: "{  { audience }}"
    credential_type: Container Registry
    inputs:
      host: hub.lab.msp.redhat.com
      username: "{  { admin_username }}"
      password: "{  { admin_password }}"
      verify_ssl: no
  - name: Red Hat Registry Credentials
    organization: "{  { audience }}"
    credential_type: Red Hat Registry Credentials
  - name: Root Credentials
    organization: "{  { audience }}"
    credential_type: Machine
    inputs:
      username: root
      password: "{  { admin_password }}"
  - name: RHC Edge Credentials
    credential_type: RHC Edge Credentials
    organization: "{  { audience }}"
  - name: Controller API Credentials
    organization: "{  { audience }}"
    credential_type: Controller API Credentials
  - name: vCenter Credentials
    organization: "{  { audience }}"
    credential_type: vCenter Credentials
  - name: Edge User Credentials
    organization: "{  { audience }}"
    credential_type: Machine
    inputs:
      username: "{  { edge_user_username }}"
      ssh_key_data: "{  { edge_user_ssh_key_data }}"
  - name: Console Dot Offline Token
    organization: "{  { audience }}"
    credential_type: Console Dot Offline Token

controller_execution_environments:
  - name: Josh's Demos Collection EE
    image: 'hub.lab.msp.redhat.com/joshs-demos-collection-ee:latest'
    organization: "{  { audience }}"
    credential: Automation Hub Image Registry Credentials
    pull: always

controller_inventories:
  - name: "{  { audience }} Edge Systems"
    organization: "{  { audience }}"
    variables:
      audience: "{  { audience }}"
      demo_uuid: "{  { demo_uuid }}"
      kiosk_website: "https://{  { audience | lower }}.com"
  - name: "{  { audience }} Edge Utilities"
    organization: "{  { audience }}"
    variables:
      audience: "{  { audience }}"
      demo_uuid: "{  { demo_uuid }}"
  - name: Local Actions
    organization: "{  { audience }}"
    variables:
      audience: "{  { audience }}"
      demo_uuid: "{  { demo_uuid }}"
      base_dns_suffix: "{  { base_dns_suffix }}"

controller_hosts:
  - name: "edge-utilities.{{ demo_uuid }}.{{ base_dns_suffix }}"
    inventory: "{  { audience }} Edge Utilities"
  - name: localhost
    inventory: Local Actions
    variables:
      ansible_connection: local
      ansible_python_interpreter: "{  { ansible_playbook_python }}"

controller_group_tiers: 2

controller_groups_tier1:
  - name: point_of_sale
    inventory: "{  { audience }} Edge Systems"
    variables:
      sys_purpose: point-of-sale
  - name: back_of_store
    inventory: "{  { audience }} Edge Systems"
    variables:
      sys_purpose: back-of-store
  - name: process_control
    inventory: "{  { audience }} Edge Systems"
    variables:
      sys_purpose: process-control
  - name: plant_operations
    inventory: "{  { audience }} Edge Systems"
    variables:
      sys_purpose: process-control
  - name: store1000
    inventory: "{  { audience }} Edge Systems"
    variables:
      country: US
      state: MN
      City: Saint Paul
  - name: store1001
    inventory: "{  { audience }} Edge Systems"
    variables:
      country: US
      state: WI
      City: Milwaukee
  - name: plant100
    inventory: "{  { audience }} Edge Systems"
    variables:
      country: US
      state: IN
      City: Lafayette
  - name: plant101
    inventory: "{  { audience }} Edge Systems"
    variables:
      country: US
      state: IN
      City: West Lafayette

controller_groups_tier2:
  - name: retail_stores
    inventory: "{  { audience }} Edge Systems"
    children:
      - store1000
      - store1001
  - name: manufacturing_plants
    inventory: "{  { audience }} Edge Systems"
    children:
      - plant100
      - plant101

controller_projects:
  - name: "{  { audience }} Edge Management Codebase"
    organization: "{  { audience }}"
    scm_branch: main
    scm_type: git
    scm_url: https://github.com/jjaswanson4/jdc.git

controller_templates:
  - name: Create Edge Installer ISO
    inventory: "{  { audience }} Edge Utilities"
    project: "{  { audience }} Edge Management Codebase"
    organization: "{  { audience }}"
    playbook: playbooks/create-edge-installer-iso.yml
    execution_environment: Josh's Demos Collection EE
    credentials:
      - Root Credentials
      - RHC Edge Credentials
      - Controller API Credentials
      - Red Hat Registry Credentials
      - vCenter Credentials
  - name: Provision Edge Systems
    inventory: Local Actions
    project: "{  { audience }} Edge Management Codebase"
    organization: "{  { audience }}"
    playbook: playbooks/provision-rhel-edge-system.yml
    execution_environment: Josh's Demos Collection EE
    credentials:
      - vCenter Credentials
  - name: Apply Configuration to Edge Device
    inventory: "{  { audience }} Edge Systems"
    project: "{  { audience }} Edge Management Codebase"
    organization: "{  { audience }}"
    playbook: playbooks/post-install-rhel-edge-systems.yml
    execution_environment: Josh's Demos Collection EE
    ask_limit_on_launch: yes
    become_enabled: yes
    allow_simultaneous: yes
    credentials:
      - Edge User Credentials
  - name: Add Device to Edge Management Group
    inventory: "{  { audience }} Edge Systems"
    project: "{  { audience }} Edge Management Codebase"
    organization: "{  { audience }}"
    playbook: playbooks/add-device-to-group-in-edge-mgmt.yml
    execution_environment: Josh's Demos Collection EE
    ask_limit_on_launch: yes
    become_enabled: yes
    allow_simultaneous: yes
    credentials:
      - Console Dot Offline Token

controller_workflows:
  - name: Create ISO and Provision Systems
    organization: "{  { audience }}"
    state: present
    survey_enabled: yes
    survey:
      name: ''
      description: ''
      spec:
        - type: multiplechoice
          question_name: Kiosk or Headless Mode?
          question_description: What mode should RHEL for Edge run in?
          variable: r4e_mode
          choices:
            - kiosk
            - headless
          required: yes
          default: kiosk
        - type: text
          question_name: Kiosk Website?
          question_description: If building r4e systems, what website should they display?
          variable: kiosk_website
          required: no
          default: "https://{  { audience | lower }}.com"
    simplified_workflow_nodes:
      - identifier: Create Edge Installer ISO
        unified_job_template: Create Edge Installer ISO
        success_nodes:
          - Provision Edge Systems
      - identifier: Provision Edge Systems
        unified_job_template: Provision Edge Systems
  - name: Post-Install Edge System
    organization: "{  { audience }}"
    state: present
    ask_limit_on_launch: yes
    simplified_workflow_nodes:
      - identifier: Apply Configuration to Edge Device
        unified_job_template: Apply Configuration to Edge Device
      - identifier: Add Device to Edge Management Group
        unified_job_template: Add Device to Edge Management Group