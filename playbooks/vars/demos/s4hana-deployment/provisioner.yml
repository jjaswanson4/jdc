---

# By default, the org 'Demo Provisioner' is created and resources are configured there,
# Use this variable to override this behavior.
# For example, overriding to 'Default' will put the resources into the default controller organization.
controller_organization: Demo Provisioner

# This is the default project name. It is a var so demos can import specific job templates and override the project locally.
# Change this to change the name of the project for the provisioner job templates.
project: Josh's Demos Collection

# This is the default prefix for assets created for this demo.
# Change this variable to use a different prefix.
demo_prefix: Patching Demo

# This is the realitive path to the vars files for this demo.
# Typically this contains a vars file for the provisioner, Satellite, and Controller.
vars_files_path: "vars/demos/{{ demo }}"

# This is the execution environment used for this demo provisioner.
# This execution environment will automatically be configured in Controller.
execution_environment:
  name: Josh's Demos Collection EE
  registry: "{{ ee_registry.host }}"
  image: joshs-demos-collection-ee
  credential: Demo Provisioner EE Image Registry Credentials

# This is the information used for the instance of Controller for the demo.
# This can be the same instance as where the provisioner is deployed, but it's not recommended.
controller_configuration_file: "{{ vars_files_path }}/controller.yml"

# This is the information used for the instance of Satellite for the demo.
# This can be the same instance as where the provisioner is deployed, but it's not recommended.
satellite_configuration_file: "{{ vars_files_path }}/satellite.yml"

base_dns_suffix: demos.lcl

# This toggles secure logging, for example: when configuring credentials on Ansible Controller.
# Since I'm using my own instance, secure logging isn't a requirement.
controller_configuration_credentials_secure_logging: no

controller_organizations: []
controller_credential_types: []
controller_credentials: []
controller_execution_environments: []
controller_inventories: []
controller_projects: []
controller_templates: []
controller_hosts: []
controller_groups: []

controller_workflows:
  - name: Provision S/4HANA Deployment Demo
    organization: "{{ controller_organization }}"
    state: "{{ controller_state | default('present') }}"
    ask_inventory_on_launch: yes
    ask_variables_on_launch: yes
    extra_vars:
      demo: s4hana-deployment
    simplified_workflow_nodes:
      - identifier: Create CMDB Records
        unified_job_template: Manage CMDB Records
        limit: management_plane
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner vCenter Credentials
        success_nodes:
          - Create DNS Records
        failure_nodes:
          - Send Failure Email About 'Create CMDB Records'
      - identifier: Send Failure Email About 'Create CMDB Records'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Create CMDB Records
      - identifier: Create DNS Records
        unified_job_template: Manage DNS Records
        limit: management_plane
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner IDM Credentials
        success_nodes:
          - Provision Satellite
          - Provision Controller
        failure_nodes:
          - Send Failure Email About 'Create DNS Records'
      - identifier: Send Failure Email About 'Create DNS Records'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Create DNS Records
      - identifier: Provision Satellite
        unified_job_template: Provision Systems
        limit: satellite
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
        success_nodes:
          - Apply Standard Config to Satellite
        failure_nodes:
          - Send Failure Email About 'Provision Satellite'
      - identifier: Send Failure Email About 'Provision Satellite'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Provision Satellite
      - identifier: Apply Standard Config to Satellite
        unified_job_template: Apply Standard Configuration
        limit: satellite
        credentials:
          - Demo Provisioner Root Account
        success_nodes:
          - Install Red Hat Satellite
        failure_nodes:
          - Send Failure Email About 'Apply Standard Config to Satellite'
      - identifier: Send Failure Email About 'Apply Standard Config to Satellite'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Apply Standard Config to Satellite
      - identifier: Install Red Hat Satellite
        unified_job_template: Install Red Hat Satellite
        limit: satellite
        credentials:
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
        success_nodes:
          - Configure Red Hat Satellite
        failure_nodes:
          - Send Failure Email About 'Install Red Hat Satellite'
      - identifier: Send Failure Email About 'Install Red Hat Satellite'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Install Red Hat Satellite
      - identifier: Configure Red Hat Satellite
        unified_job_template: Configure Red Hat Satellite
        limit: satellite
        credentials:
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
          - Demo Provisioner EE Python Libraries Env Vars
        success_nodes:
          - Send Success Email
        failure_nodes:
          - Send Failure Email About 'Configure Red Hat Satellite'
      - identifier: Send Failure Email About 'Configure Red Hat Satellite'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Configure Red Hat Satellite
      - identifier: Provision Controller
        unified_job_template: Provision Systems
        limit: controller
        credentials:
          - Demo Provisioner Netbox Credentials
          - Demo Provisioner Satellite Credentials
          - Demo Provisioner vCenter Credentials
          - Demo Provisioner Root Account
        success_nodes:
          - Apply Standard Config to Controller
        failure_nodes:
          - Send Failure Email About 'Provision Controller'
      - identifier: Send Failure Email About 'Provision Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Provision Controller
      - identifier: Apply Standard Config to Controller
        unified_job_template: Apply Standard Configuration
        limit: controller
        credentials:
          - Demo Provisioner Root Account
        success_nodes:
          - Install Ansible Controller
        failure_nodes:
          - Send Failure Email About 'Apply Standard Config to Controller'
      - identifier: Send Failure Email About 'Apply Standard Config to Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Apply Standard Config to Controller     
      - identifier: Install Ansible Controller
        unified_job_template: Install Ansible Controller
        limit: controller
        credentials:
          - Demo Provisioner Red Hat Registry Credentials
          - Demo Provisioner Root Account
          - Demo Provisioner Admin Credentials
        success_nodes:
          - Configure Ansible Controller
        failure_nodes:
          - Send Failure Email About 'Install Ansible Controller'
      - identifier: Send Failure Email About 'Install Ansible Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Install Ansible Controller
      - identifier: Configure Ansible Controller
        unified_job_template: Configure Ansible Controller
        limit: controller
        credentials:
          - Demo Provisioner Admin Credentials
          - Demo Provisioner Controller Credentials
        success_nodes:
          - Send Success Email
        failure_nodes:
          - Send Failure Email About 'Configure Ansible Controller'
        all_parents_must_converge: yes
      - identifier: Send Failure Email About 'Configure Ansible Controller'
        unified_job_template: Send Provisioner Email
        extra_data:
          failed_at_step: Configure Ansible Controller
      - identifier: Send Success Email
        unified_job_template: Send Provisioner Email
        all_parents_must_converge: yes
        extra_data:
          provisioner_status: success

  # - name: Teardown S4HANA Deployment Demo
  #   organization: Demo Provisioner
  #   state: "{{ controller_state | default('present') }}"
  #   extra_vars:
  #     demo: s4hana-deployment
  #   survey_enabled: yes
  #   survey:
  #     name: ''
  #     description: ''
  #     spec:
  #       - type: text
  #         question_name: "Demo Audience?"
  #         question_description: "Who is the audience for this demo"
  #         variable: audience
  #         required: yes
  #   simplified_workflow_nodes:
  #     - unified_job_template: Unregister from Insights
  #       identifier: node996
  #       inventory: "{{ inventory }}"
  #       limit: 'demo_hosts'
  #       credentials:
  #         - "{{ demo_prefix }} Root Account"
  #       always_nodes:
  #         - node997
  #     - unified_job_template: Teardown Systems
  #       identifier: node997
  #       inventory: "{{ inventory }}"
  #       limit: demo_hosts
  #       credentials:
  #         - "{{ demo_prefix }} Peripheral Credentials"
  #       always_nodes:
  #         - node998
  #     - unified_job_template: Teardown Systems
  #       identifier: node998
  #       inventory: "{{ inventory }}"
  #       limit: management_plane
  #       credentials:
  #         - "{{ demo_prefix }} Peripheral Credentials"
  #       always_nodes:
  #         - node999
  #     - unified_job_template: Cleanup DNS Records
  #       identifier: node999
  #       inventory: "{{ inventory }}"
  #       limit: 'demo_hosts:management_plane'
  #       credentials:
  #         - "{{ demo_prefix }} Peripheral Credentials"