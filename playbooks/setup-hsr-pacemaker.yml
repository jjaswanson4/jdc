---

- name: set IP address of primary
  hosts:
    - primary
  tasks:
    - name: set the primary IP address fact
      ansible.builtin.set_fact:
        sap_hana_ha_pacemaker_node1_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      when:
        - sap_hana_ha_pacemaker_node1_ip is not defined

- name: set IP address of secondary
  hosts:
    - secondary
  tasks:
    - name: set the primary IP address fact
      ansible.builtin.set_fact:
        sap_hana_ha_pacemaker_node2_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      when:
        - sap_hana_ha_pacemaker_node2_ip is not defined

- name: setup HSR and Pacemaker between two HANA nodes
  hosts:
    - all
  pre_tasks:
    - name: check HSR
      ansible.builtin.shell:
        cmd: su - {{ sap_hana_deployment_hana_sid | lower }}adm -c "/usr/sap/{{ sap_hana_deployment_hana_sid }}/HDB{{ sap_hana_deployment_hana_instance_number }}/exe/Python/bin/python /usr/sap/{{ sap_hana_deployment_hana_sid }}/HDB{{ sap_hana_deployment_hana_instance_number }}/exe/python_support/systemReplicationStatus.py"
      register: hsr_check
      changed_when: no
      failed_when: no
    - name: check Pacemaker
      ansible.builtin.shell:
        cmd: pcs status
      register: pcs_check
      changed_when: no
      failed_when: no
    - name: enable the ruby 2.5 module stream
      ansible.builtin.yum:
        name: '@ruby:2.5/common'
  tasks:
    - name: run tasks from localhost
      block:
        - name: get auth token for netbox
          ansible.builtin.uri:
            url: "{{ netbox_url }}/api/users/tokens/provision/"
            validate_certs: "{{ netbox_validate_certs | default(omit) }}"
            method: POST
            status_code: 201
            body_format: json
            body:
              username: "{{ netbox_username }}"
              password: "{{ netbox_password }}"
          register: netbox_auth_token_raw
        - name: set netbox token fact
          ansible.builtin.set_fact:
            netbox_token: "{{ netbox_auth_token_raw.json.key }}"
        - name: get VIP record
          ansible.builtin.uri:
            url: "{{ netbox_url }}/api/ipam/ip-addresses/?dns_name={{ sap_s4hana_deployment_db_host }}"
            validate_certs: "{{ netbox_validate_certs | default(omit) }}"
            headers:
              Authorization: Token {{ netbox_token }}
          register: vip_record_raw
        - name: set vip record address fact
          ansible.builtin.set_fact:
            sap_hana_ha_pacemaker_vip: "{{ vip_record_raw.json.results[0].address.split('/')[0] }}"
      delegate_to: localhost
      throttle: 5
      when:
        - pcs_check.rc | int != 0
    - name: run HSR role
      ansible.builtin.include_role:
        name: sap-hana-hsr
      when:
        - "'this system is not a system replication site' in hsr_check.stdout"
    - name: run pacemaker role
      ansible.builtin.include_role:
        name: sap-hana-ha-pacemaker
      when:
        - pcs_check.rc | int != 0